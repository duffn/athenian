=begin
This is an automatically generated file. DO NOT EDIT.

Generated from version 2.1.81 of the OpenAPI specification at
https://github.com/athenianco/api-spec/releases/tag/2.1.81.
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.4.0
=end

require 'spec_helper'
require 'json'

# Unit tests for Athenian::TeamApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TeamApi' do
  before do
    # run before each test
    @api_instance = Athenian::TeamApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TeamApi' do
    it 'should create an instance of TeamApi' do
      expect(@api_instance).to be_instance_of(Athenian::TeamApi)
    end
  end

  # unit tests for create_team
  # üë§ Create a team. Admin is not required.
  # @param [Hash] opts the optional parameters
  # @option opts [TeamCreateRequest] :body 
  # @return [CreatedIdentifier]
  describe 'create_team test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_team
  # üë§ Delete a team.
  # @param id Numeric identifier of the team to delete.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'delete_team test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_team
  # List the team&#39;s members. The user must belong to the account that owns the team.
  # @param id Numeric identifier of the team to list.
  # @param [Hash] opts the optional parameters
  # @return [Team]
  describe 'get_team test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_teams
  # List the teams belonging to the calling user.
  # @param id Numeric identifier of the account.
  # @param [Hash] opts the optional parameters
  # @return [Array<Team>]
  describe 'list_teams test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for resync_teams
  # üõ°Ô∏è Delete all the teams belonging to the account and then clone from GitHub. The \&quot;Bots\&quot; team will remain intact. The rest of the teams will be identical to what&#39;s on GitHub.
  # @param id Numeric identifier of the account.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :unmapped Delete teams that are not backed by GitHub.
  # @return [Array<Team>]
  describe 'resync_teams test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_team
  # üë§ Update a team.
  # @param id Numeric identifier of the team to update.
  # @param [Hash] opts the optional parameters
  # @option opts [TeamUpdateRequest] :body 
  # @return [Object]
  describe 'update_team test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
